image: docker:git

services:
- docker:dind

stages:
- build_image

before_script:
  - mkdir -p ${HOME}/.docker
  - echo ${DOCKER_AUTH_CONFIG} > ${HOME}/.docker/config.json
  - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"

build_image.default:
  stage: build_image
  script:
  - docker buildx create --driver docker-container --use
  - docker buildx build
    --provenance=false
    --pull
    --build-arg BUILD_NAME="${CI_PROJECT_NAME}"
    --build-arg BUILD_DATE="$(date '+%FT%T.%s%z')"
    --build-arg BUILD_VCSREF="${CI_COMMIT_SHA:0:8}"
    --build-arg ANSIBLE_VERSION="${ANSIBLE_VERSION}"
    --build-arg ANSIBLE_LINT_VERSION=${ANSIBLE_LINT_VERSION}
    --platform=linux/amd64
    -t "${CI_REGISTRY_IMAGE}:${ANSIBLE_VERSION}"
    .
  - docker run -i --entrypoint '' "${CI_REGISTRY_IMAGE}:${ANSIBLE_VERSION}" cat /pip3_freeze.txt > pip3.txt
  artifacts:
    paths:
      - pip3.txt
  only:
  - master
  except:
  - tags

build_image.feature:
  stage: build_image
  script:
  - docker buildx create --driver docker-container --use
  - docker buildx build
    --provenance=false
    --pull
    --build-arg BUILD_NAME="${CI_PROJECT_NAME}"
    --build-arg BUILD_DATE="$(date '+%FT%T.%s%z')"
    --build-arg BUILD_VCSREF="${CI_COMMIT_SHA:0:8}"
    --build-arg ANSIBLE_VERSION="${ANSIBLE_VERSION}"
    --build-arg ANSIBLE_LINT_VERSION=${ANSIBLE_LINT_VERSION}
    --platform=linux/amd64
    -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME%%-*}"
    .
  - docker run -i --entrypoint '' "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME%%-*}" cat /pip3_freeze.txt > pip3.txt
  artifacts:
    paths:
      - pip3.txt
  only:
  - "/^[0-9]+-.*$/"
  except:
  - tags

build_image.nonstd:
  stage: build_image
  script:
  - docker buildx create --driver docker-container --use
  - docker buildx build
    --provenance=false
    --pull
    --build-arg BUILD_NAME="${CI_PROJECT_NAME}"
    --build-arg BUILD_DATE="$(date '+%FT%T.%s%z')"
    --build-arg BUILD_VCSREF="${CI_COMMIT_SHA:0:8}"
    --build-arg ANSIBLE_VERSION="${ANSIBLE_VERSION}"
    --build-arg ANSIBLE_LINT_VERSION=${ANSIBLE_LINT_VERSION}
    --platform=linux/amd64
    -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME:0:128}"
    .
  - docker run -i --entrypoint '' "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME:0:128}" cat /pip3_freeze.txt > pip3.txt
  artifacts:
    paths:
      - pip3.txt
  only:
  - "/^[a-zA-Z]+.*$/"
  except:
  - master
  - dev
  - tags

build_image.tag:
  stage: build_image
  script:
  - docker buildx create --driver docker-container --use
  - docker buildx build
    --provenance=false
    --pull
    --build-arg BUILD_NAME="${CI_PROJECT_NAME}"
    --build-arg BUILD_DATE="$(date '+%FT%T.%s%z')"
    --build-arg BUILD_VCSREF="${CI_COMMIT_SHA:0:8}"
    --build-arg ANSIBLE_VERSION="${CI_COMMIT_REF_NAME}"
    --build-arg ANSIBLE_LINT_VERSION="${ANSIBLE_LINT_VERSION}"
    --platform=linux/arm64,linux/amd64,linux/arm/v7
    --push
    -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    -t "${DU_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    -t "${CI_REGISTRY_IMAGE}:latest"
    -t "${DU_REGISTRY_IMAGE}:latest"
    .
  - docker run -i --entrypoint '' "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}" cat /pip3_freeze.txt > pip3.txt
  artifacts:
    paths:
      - pip3.txt
  only:
  - tags
